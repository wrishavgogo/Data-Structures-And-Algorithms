class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin() , intervals.end());
        vector<vector<int>> vt;
        int curend = INT_MIN;
        int start = -1;
        for(int i = 0 ; i < intervals.size() ; i ++) {
            if(i == 0 ) {
                start = intervals[i][0];
                curend = intervals[i][1];
                continue;
            } 
            
            if(curend >= intervals[i][0]) {
                curend = max(curend , intervals[i][1]);
            }
            else
            {
                vector<int> go;
                go.push_back(start);
                go.push_back(curend);
                vt.push_back(go);
                start = intervals[i][0];
                curend = intervals[i][1];
            }
        }
        
        vector<int> go;
        go.push_back(start);
        go.push_back(curend);
        vt.push_back(go);
        
        return vt;
    }
};
