class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        
        long long l = 1;
        
        
        
        long long  n = piles.size() ;
        long long sum = 0;
        for(int i = 0 ; i < n ; i ++)
        {
            sum += piles[i];
        }
        
        long long  r = sum;
        long long  ans = -1;
        
        while(l <= r)
        {
            long long  mid = l + r;
            mid  /= 2;
            
            if(isvalid(piles , mid , h))
            {
                ans = mid;
                r = mid - 1;
            }
            else
            {
                l = mid + 1;
            }
            
        }
        
        return ans;
    }
    
    bool isvalid(vector<int>& piles , int perhour , int h)
    {
        long  sum = 0 ;
        
        for(auto x : piles)
        {
            sum += x/perhour;
            
            sum +=  x%perhour ? 1 : 0;
        }
        
        return sum <= h;
    }
};
